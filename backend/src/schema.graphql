type Query {
  me: User
  getUserById(id: Int): User
  getToken: String
  getMatchingPlaces(origin: String, categories: String): [Place!]
  getTrips(
    originId: Int
    destinationId: Int
    date: String
    time: String
  ): String
  getSurpriseTrips(
    originId: Int!
    travelDate: String!
    categories: [String!]
    maxPrice: Int!
    withHalfFare: Boolean
  ): [Trip!]!
  getEvents(placeName: String!, eventDate: String!): [Event!]
  getPlaceItineraries(placeName: String!): [Itinerary!]!
  getPriceOfTicket(tripId: String, passengers: String): String
  getPrices(tripIds: [SbbTrip], passengers: String): String
  getOffersForTrip(tripId: String, passengers: String): String
  prebookTicket(offerId: String): String
}

input SbbTrip {
  tripId: String!
}

type Mutation {
  signup(input: UserInput): User
  # login(input: UserInput): User @resolver
}

input UserInput {
  email: String!
  password: String!
  name: String
}

type AuthPayload {
  token: String!
  user: User!
}

type Trip {
  start: String!
  end: String!
  categories: CategoryFrequencies!
  price: Float!
  discount: Float!
}

type User {
  id: ID!
  email: String!
  name: String!
}

type Place {
  id: Int
  categories: [String!]!
  count: Int!
  name: String!
  ratingSum: Float!
  ratingAvg: Float!
  score: Float!
  activities: [Activity!]!
  isReachable: Boolean!
}

type Activity {
  id: String!
  level: String!
  rating: Int
  rating_local: Int
  name: String!
  name_suffix: String!
  url: String!
  location: Location!
  bounding_box: BoundingBox!
  categories: [String!]!
  parent_ids: [String!]!
}

type Location {
  lat: Float!
  lng: Float!
}

type BoundingBox {
  south: Float!
  north: Float!
  east: Float!
  west: Float!
}

type CategoryFrequencies {
  hiking: Int
  playing: Int
  going_out: Int
  sightseeing: Int
  eating: Int
}

type Event {
  event_id: ID!
  title_en: String!
  start_time: String
  end_time: String
  address_venue_name: String
  address_city: String
  homepage: String
}

type Itinerary {
  id: ID!
  name: String!
  url: String!
}
